package com.mycompany.ordenamiento.vista;

import com.mycompany.ordenamiento.Ordenamiento;
import static com.mycompany.ordenamiento.modelo.Burbuja.ordenarBurbuja;
import com.mycompany.ordenamiento.modelo.HeapSort;
import com.mycompany.ordenamiento.modelo.Insercion;
import com.mycompany.ordenamiento.modelo.QuickSort;
import com.mycompany.ordenamiento.modelo.Seleccion;
import com.mycompany.ordenamiento.modelo.Shell;
import javax.swing.JOptionPane;

public class principal extends javax.swing.JFrame {

    /**
     * Creates new form principal
     */
    public principal() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        Jtnumeros = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jBgenerar = new javax.swing.JButton();
        jBBurbuja = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTordenamiento = new javax.swing.JTextArea();
        jBInsercion = new javax.swing.JButton();
        jBSeleccion = new javax.swing.JButton();
        jBShell = new javax.swing.JButton();
        jBHeapSort = new javax.swing.JButton();
        jBQuickSort = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLTiempoDuracion = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Ordernamiento");

        jLabel2.setText("Ingresa numeros separados por espacio");

        jBgenerar.setText("Generar");
        jBgenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBgenerarActionPerformed(evt);
            }
        });

        jBBurbuja.setText("Burbuja");
        jBBurbuja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBurbujaActionPerformed(evt);
            }
        });

        jTordenamiento.setColumns(20);
        jTordenamiento.setRows(5);
        jScrollPane1.setViewportView(jTordenamiento);

        jBInsercion.setText("Inserción");
        jBInsercion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBInsercionActionPerformed(evt);
            }
        });

        jBSeleccion.setText("Selección");
        jBSeleccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBSeleccionActionPerformed(evt);
            }
        });

        jBShell.setText("Shell");
        jBShell.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBShellActionPerformed(evt);
            }
        });

        jBHeapSort.setText("HeapSort ");
        jBHeapSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHeapSortActionPerformed(evt);
            }
        });

        jBQuickSort.setText("Quick Sort");
        jBQuickSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBQuickSortActionPerformed(evt);
            }
        });

        jLabel3.setText("Tiempo de ordenamiento");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(188, 188, 188))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(153, 153, 153)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Jtnumeros)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 268, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jBgenerar)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLTiempoDuracion, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jBBurbuja)
                        .addGap(18, 18, 18)
                        .addComponent(jBInsercion)
                        .addGap(18, 18, 18)
                        .addComponent(jBSeleccion)
                        .addGap(18, 18, 18)
                        .addComponent(jBShell)
                        .addGap(18, 18, 18)
                        .addComponent(jBHeapSort)
                        .addGap(18, 18, 18)
                        .addComponent(jBQuickSort)))
                .addContainerGap(18, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addGap(3, 3, 3)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Jtnumeros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBgenerar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBBurbuja)
                            .addComponent(jBInsercion)
                            .addComponent(jBSeleccion)
                            .addComponent(jBShell)
                            .addComponent(jBHeapSort)
                            .addComponent(jBQuickSort))
                        .addGap(27, 27, 27))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLTiempoDuracion, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBgenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBgenerarActionPerformed
        String arregloGenerado = Ordenamiento.generarArreglo();  // Ajusta el nombre del método según tu implementación
        Jtnumeros.setText(arregloGenerado);
    }//GEN-LAST:event_jBgenerarActionPerformed

    private void jBBurbujaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBurbujaActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento y pasar el JLabel
        ordenarBurbuja(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBBurbujaActionPerformed

    private void jBInsercionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBInsercionActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento por inserción y pasar el JLabel
        Insercion.ordenarInsercion(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBInsercionActionPerformed

    private void jBSeleccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBSeleccionActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento por selección y pasar el JLabel
        Seleccion.ordenarSeleccion(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBSeleccionActionPerformed

    private void jBShellActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBShellActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento ShellSort y pasar el JLabel
        Shell.ordenarShell(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBShellActionPerformed

    private void jBHeapSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHeapSortActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento HeapSort y pasar el JLabel
        HeapSort.ordenarHeapSort(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBHeapSortActionPerformed

    private void jBQuickSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBQuickSortActionPerformed
        // Obtener el texto de Jtnumeros
        String numerosTexto = Jtnumeros.getText();
        String[] numerosSeparados = numerosTexto.split("\\s+");
        int[] arregloNumeros = new int[numerosSeparados.length];

        try {
            for (int i = 0; i < numerosSeparados.length; i++) {
                arregloNumeros[i] = Integer.parseInt(numerosSeparados[i]);
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Error al convertir algunos números. Asegúrate de ingresar solo números válidos.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        // Llamar al método de ordenamiento QuickSort y pasar el JLabel
        QuickSort.ordenarQuickSort(arregloNumeros, jLTiempoDuracion);
        actualizarJTextArea(arregloNumeros);
    }//GEN-LAST:event_jBQuickSortActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    public void actualizarJTextArea(int[] arregloOrdenado) {
        StringBuilder sb = new StringBuilder();

        for (int num : arregloOrdenado) {
            sb.append(num).append(" ");
        }

        jTordenamiento.setText(sb.toString());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Jtnumeros;
    private javax.swing.JButton jBBurbuja;
    private javax.swing.JButton jBHeapSort;
    private javax.swing.JButton jBInsercion;
    private javax.swing.JButton jBQuickSort;
    private javax.swing.JButton jBSeleccion;
    private javax.swing.JButton jBShell;
    private javax.swing.JButton jBgenerar;
    private javax.swing.JLabel jLTiempoDuracion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTordenamiento;
    // End of variables declaration//GEN-END:variables
}
